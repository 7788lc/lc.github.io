[{"title":"偏态与峰态的度量","url":"/2021/09/22/偏态与峰态/","content":"**偏态与峰态的度量**\n\n偏态和峰态是对数据分布形状的测度，通过它们可以知道数据分布形状是否对称,偏斜程度以及分布的扁平程度等。\n\n**偏态**\n\n偏态相对与正态分布而言，偏态可以体现异常值的分布方向。\n\n很多统计模型假设前提是数据符合正态分布，数据如果严重偏斜，会影响模型输出结果，所以在输入模型前要观察数据的偏度，以免影响模型输出结果\n\n测度偏态的统计量是偏态系数\n\n偏度系数大于0，说明数据右偏或正偏\n\n偏度系数小于0，说明数据左偏或负偏\n\n偏度系数等于0，说明数据分布是对称的\n\n未分组数据 $$SK= \\frac{n\\sum{ (x_i - \\overline{x}) ^3}}{(n-1)(n-2)s^3} $$\n\n$s^3$是样本标准差的3次方\n\n分组数据  $$SK= \\frac{\\sum _{i=1}^k(M_i-\\overline{x}) ^3 f_i }{ns^3}$$\n\n其中$M_i$是分组数据的组中值\n\n\n处理偏态数据常用方法：\n\n1.取对数\n\n2.指数变换法\n\n3.幂变换\n\n4.平方根变换\n\n5.box-cox变换\n\n\n```python\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom scipy.stats import mode\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom scipy.stats import skew\nsns.set(style='white',context='notebook',palette='muted')\nimport matplotlib.pyplot as plt\n\ntrain = pd.read_csv('train.csv')\ncopy = train.sample(200)\ncopy\n\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>626</th>\n      <td>627</td>\n      <td>0</td>\n      <td>2</td>\n      <td>Kirkland, Rev. Charles Leonard</td>\n      <td>male</td>\n      <td>57.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>219533</td>\n      <td>12.3500</td>\n      <td>NaN</td>\n      <td>Q</td>\n    </tr>\n    <tr>\n      <th>481</th>\n      <td>482</td>\n      <td>0</td>\n      <td>2</td>\n      <td>Frost, Mr. Anthony Wood \"Archie\"</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>239854</td>\n      <td>0.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>850</th>\n      <td>851</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Andersson, Master. Sigvard Harald Elias</td>\n      <td>male</td>\n      <td>4.0</td>\n      <td>4</td>\n      <td>2</td>\n      <td>347082</td>\n      <td>31.2750</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>135</th>\n      <td>136</td>\n      <td>0</td>\n      <td>2</td>\n      <td>Richard, Mr. Emile</td>\n      <td>male</td>\n      <td>23.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>SC/PARIS 2133</td>\n      <td>15.0458</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>230</th>\n      <td>231</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Harris, Mrs. Henry Birkhardt (Irene Wallach)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>36973</td>\n      <td>83.4750</td>\n      <td>C83</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>547</th>\n      <td>548</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Padro y Manent, Mr. Julian</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>SC/PARIS 2146</td>\n      <td>13.8625</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>524</th>\n      <td>525</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Kassem, Mr. Fared</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2700</td>\n      <td>7.2292</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>468</th>\n      <td>469</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Scanlan, Mr. James</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>36209</td>\n      <td>7.7250</td>\n      <td>NaN</td>\n      <td>Q</td>\n    </tr>\n    <tr>\n      <th>858</th>\n      <td>859</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Baclini, Mrs. Solomon (Latifa Qurban)</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2666</td>\n      <td>19.2583</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>507</th>\n      <td>508</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Bradley, Mr. George (\"George Arthur Brayton\")</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>111427</td>\n      <td>26.5500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n<p>200 rows × 12 columns</p>\n</div>\n\n\n\n\n```python\n#以泰坦尼克数据为例，查看票价的偏度\nskew(copy['Fare'])\n#抽取的样本中票价偏度为右偏，数据偏度高度正偏\n\n\n```\n\n\n\n\n    3.2250338215549292\n\n\n\n\n```python\n#使用直方图观察\n#抽取的样本中票价偏度为右偏，数据偏度高度正偏，数据集中在左侧\np = sns.distplot(copy['Fare'],label='skewness%.2f')\np.legend(loc='best')\n```\n\n\n\n\n    <matplotlib.legend.Legend at 0x1624baad390>\n\n\n\n\n![png](output_3_1.png)\n\n\n**峰态及其测度**\n\n峰态是与正态分布而言，它是对数据分布平峰或尖峰程度的测试\n\n正态分布峰度系数为3\n\n测度峰态的统计量是峰度系数\n\n\n\n未分组数据：\n$$K = \\frac{n(n+1)\\sum(x_i-\\overline{x})^4-3\\big[\\sum(x_i-\\overline{x})^2\\big]^2(n-1)} {(n-1)(n-2)(n-3)s^4}$$\n\n分组数据：\n$$K=\\frac{\\sum_{i=1}^k(M_i-\\overline{x})^4f_i}{ns^4} -3 $$\n\n减去3是为了使比较标准变为0，因为正态分布峰度系数为3\n\n\n\n```python\nimport scipy.stats as st\n#标准正态分布的峰度系数\ns = np.random.normal(size=1000)\n#使用pearson定义  不减去3\nst.kurtosis(s,fisher=False)\n```\n\n\n\n\n    3.0323313898498414\n\n\n\n\n```python\n\n#使用默认fisher定义  减去3\nst.kurtosis(s)\n```\n\n\n\n\n    0.34768257633927524\n\n\n","tags":["数据度量"],"categories":["统计"]},{"title":"数值型数据处理","url":"/2021/09/22/数值型数据/","content":"\n**数值型数据的整理与展示**\n\n数据分组：\n\n数据分组是将原始数据安装某种标准分成不同的组别，分组后的数据称为分组数据。\n\n数据分组方法分为单变量分组和组距分组\n\n其中单变量分组适用于离散变量，单变量分组是把每一个变量值作为一组。\n\n在连续变量或者变量值较多的情况，通常用组距分组。它是将全部变量依次划分为若干个区间\n并将一个区间的变量值作为一组\n\n\n\n\n```python\nimport warnings\nwarnings.filterwarnings('ignore')\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndata = pd.read_csv('train.csv')\n#以kaggle 泰坦尼克数据为例\n\n#这里把年龄分为6组，cut函数会自动分组\n#labels为自定义年龄段标签\nlabels = ['baby','children','teenager','youth','middle','old']\ngroup_l = pd.cut(data['Age'],6,labels=labels)\ngroup_l\n```\n\n\n\n\n    0      children\n    1      teenager\n    2      children\n    3      teenager\n    4      teenager\n             ...   \n    886    teenager\n    887    children\n    888         NaN\n    889    children\n    890    teenager\n    Name: Age, Length: 891, dtype: category\n    Categories (6, object): ['baby' < 'children' < 'teenager' < 'youth' < 'middle' < 'old']\n\n\n\n\n```python\n#可视化年龄段人数\nc = group_l.value_counts()\nprint(c)\n\nplt.bar(c.index,height=c)\n```\n\n    children    248\n    teenager    245\n    youth       100\n    baby         71\n    middle       43\n    old           7\n    Name: Age, dtype: int64\n    \n\n\n\n\n    <BarContainer object of 6 artists>\n\n\n\n\n![png](output_2_2.png)\n\n\n\n```python\ngroup = pd.cut(data['Age'],6)#不带标签的情况\ngroup#自动分成了6组  (0.34, 13.683] < (13.683, 26.947] 。。。\n```\n\n\n\n\n    0      (13.683, 26.947]\n    1       (26.947, 40.21]\n    2      (13.683, 26.947]\n    3       (26.947, 40.21]\n    4       (26.947, 40.21]\n                 ...       \n    886     (26.947, 40.21]\n    887    (13.683, 26.947]\n    888                 NaN\n    889    (13.683, 26.947]\n    890     (26.947, 40.21]\n    Name: Age, Length: 891, dtype: category\n    Categories (6, interval[float64]): [(0.34, 13.683] < (13.683, 26.947] < (26.947, 40.21] < (40.21, 53.473] < (53.473, 66.737] < (66.737, 80.0]]\n\n\n\n\n```python\n#还可以自定义区间分组\n#这里是0-3岁 3-10岁 10-18一组 以此类推\nbins = np.array([0,3,10,18,35,65,90])\nage_group = pd.cut(data['Age'],bins)\nage_group.value_counts()\n```\n\n\n\n\n    (18, 35]    358\n    (35, 65]    209\n    (10, 18]     75\n    (3, 10]      34\n    (0, 3]       30\n    (65, 90]      8\n    Name: Age, dtype: int64\n\n\n","tags":["数据预处理"],"categories":["统计"]},{"title":"数据离散程度的度量","url":"/2021/09/22/离散程度度量/","content":"**离散程度的度量**\n\n**离散程度反映各变量值远离其中心值的程度**\n\n****\n\n**分类数据：异众比率**\n\n异众比是指非众数的频数占总频数的比例\n\n$ V_r = \\frac {\\sum f_i-f_m}{\\sum f_i} =1- \\frac {f_m}{\\sum f_i}$\n\n式中，$ \\sum f_i $为变量值的总频数；$ f_m $为众数组的频数\n\n异众比率主要用于衡量众数对一组数据的代表程度。\n\n异众比率越大，说明非众数组频数占比大，众数的代表性被削弱了。\n\n异众比率越小，说明非众数组频数占比小，众数的代表性强。\n\n\n```python\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom scipy.stats import mode\nimport numpy as np\n\n\n#举例  假设调查50个人，购买碳酸饮料的15个人为众数组频数，其他人购买别的饮料类型\n#求异众比\nv= (50-15) / 50 \nprint('percent:{:.0%}'.format(v))\n```\n\n    percent:70%\n    \n\n**顺序数据：四分位差**\n\n四分位差是上四分位数与下四分位数之差\n\n$Q_d = Q_U-Q_L$\n\n四分位差反应了中间50%数据的离散程度，数值越小，中间数据越集中\n\n数值类型数据也可以计算四分位差\n\n四分位差不受极值影响\n\n*****\n\n\n**数值型数据：**\n\n1.极差\n\n一组数据最大值与最小值之差为极差，也称为全距。\n\n公式为：$ R = max(x_i) - min(x_i) $\n\n$ max(x_i) \\quad 和 \\quad min(x_i) $ 分别为最大值与最小值\n\n极差容易受极端值影响，而且由于只利用一组数据两端信息，不能反映中间数据的分散状况。\n\n2.平均差\n\n平均差是各变量值与其平均数离差绝对值的平均数\n\n**未分组数据平均差\n\n$$ M_d = \\frac{\\sum_{i=1}^n |x_i - \\overline{x} |}{n}$$\n\n**分组数据平均差\n\n$$ M_d = \\frac{\\sum_{i=1}^k |M_i - \\overline{x} |  f_i}{n}$$\n\n其中$M_i$代表数据分组的组中值, $f_i$代表分组中数据频数\n\n平均差越大 数据离散程度越大，反之离散程度越小。\n\n平均差以平均数为中心，反应每个数据与平均数的平均差异程度。\n\n实际很少用\n\n**方差**\n\n方差是各变量值与其平均数离差平方的平均数\n\n\n未分组数据样本方差：$$s^2 = \\frac{\\sum_{i=1}^n(x_i - \\overline{x})^2}{n-1}$$\n\n分组数据样本方差：$$s^2 = \\frac{\\sum_{i=1}^k(M_i - \\overline{x})^2 f_i}{n-1}$$\n\n其中$M_i$代表数据分组的组中值, $f_i$代表分组中数据频数\n\n样本方差是除以n-1个自由度\n\n总体方差直接除以n就行\n\n方差能较好的反映出数据的离散程度，是常用的离散程度测度值\n\n\n```python\n#python计算方差\na = np.array([[1,2],[3,4]])\na\n```\n\n\n\n\n    array([[1, 2],\n           [3, 4]])\n\n\n\n\n```python\nnp.var(a,axis=0) #按每一列计算方差  var函数内部是除以 默认自由度n  不是除以n-1\n```\n\n\n\n\n    array([1., 1.])\n\n\n\n\n```python\nnp.var(a,axis=1)#按每行计算方差\n```\n\n\n\n\n    array([0.25, 0.25])\n\n\n\n\n```python\nnp.var(a) #把矩阵展开计算总方差\n```\n\n\n\n\n    1.25\n\n\n\n**标准差**\n\n方差求平方根就是标准差\n\n未分组数据：$$s = \\sqrt{\\frac{\\sum_{i=1}^n(x_i - \\overline{x})^2}{n-1}}$$\n\n\n分组数据：$$s^2 = \\sqrt{\\frac{\\sum_{i=1}^k(M_i - \\overline{x})^2  f_i}{n-1}}$$\n\n\n\n\n```python\n#numpy求标准差\na = np.array([[1,2],[3,4]])\n\nnp.std(a,axis=0)\n```\n\n\n\n\n    array([1., 1.])\n\n\n\n\n```python\nnp.std(a,axis=1)\n```\n\n\n\n\n    array([0.5, 0.5])\n\n\n\n\n```python\nnp.std(a)\n```\n\n\n\n\n    1.118033988749895\n\n\n\n**标准分数 又叫Z分数**\n\nZ分数是变量值与其平均数的差除以标准差后的值\n\n标准Z分数为：\n\n$$z_i = \\frac{x_i - \\overline{x}}{s}$$\n\n\n标准分数给出了一组数据中各数据相对位置。例如某个数据的标准分数为-1.5，说明这个数据比平均数低1.5个标准差。反之是+1.5，高与平均数1.5个标准差。\n\n\nz分数具有均值为0，标准差为1的特性，它只是将数据进行了线性变换，没有改变数据分布，是对数据进行标准化处理\n\n机器学习中常用来标准化输入数据\n\n\n\n\n```python\n#numpy \na = np.array([25,28,31,34,37,40,43])\n\nz = (a - np.mean(a)) / np.std(a)\nz\n```\n\n\n\n\n    array([-1.5, -1. , -0.5,  0. ,  0.5,  1. ,  1.5])\n\n\n\n**离散系数**\n\n离散系数也称为变异系数，它是一组数据的标准差与其相应平均数之比\n\n$$cv = \\frac{s}{\\overline{x}}$$\n\n离散系数主要用于比较不同样本数据，或者量纲不同变量的离散程度，离散系数越大，数据离散程度越大，反之离散程度越小。\n\n","tags":["数据度量"],"categories":["统计"]},{"title":"数据集中趋势度量","url":"/2021/09/22/数据集中趋势度量/","content":"**集中趋势的度量**\n\n集中趋势是一组数据向某一中心值靠拢的程度，反应了一组数据中心点的位置所在。\n\n1.分类数据：众数\n\n众数是一组数据中出现次数最多的变量值\n\n众数主要用于测度分类数据的集中趋势\n\n众数不受极端值影响，如果没有明显的集中趋势或最高峰点，众数可能不存在\n\n可以有多个众数\n\n数据量少的情况不适合使用众数\n\n\n\n\n```python\nfrom scipy.stats import mode\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')\n#使用scipy 库的mode函数求众数\nlist = ['1','2','3','1','2','2']\nprint(mode(list))\nprint(mode(list)[0][0])\n```\n\n    ModeResult(mode=array(['2'], dtype='<U1'), count=array([3]))\n    2\n    \n\n顺序数据：中位数和分位数\n\n中位数是一组数据排序后处于中间位置的变量值\n\n适用于偏度较大的数据\n\n\n```python\n#求中位数  元素个数奇数的情况 n+1 / 2 位置的值就是中位数\n#median函数会自动排序\nodd = np.array([5,4,3,2,1])\nprint(np.median(odd))\n\n#n为偶数的情况 中间两个值之和除以2\neven = np.array([1,2,3,4,5,6])\n#3+4 /2\nprint(np.median(even))\n```\n\n    3.0\n    3.5\n    \n\n四分位数\n\n通过三个点将数据分为4部分 ----25%----50%----75%----\n\n常用算法有几种 但是差别不大\n\n例如：\n\n第一分位 Q1=(n+1)×0.25\n\n第二分位 Q 2 = ( n + 1 ) × 0.5\n\n第三分位 Q 3 = ( n + 1 ) × 0.75 \n\n其中第一分位与第三分位数中间包含了50%的数据\n\n\n\nnumpy percetile计算方法：\n\n位置 \nQ1=1+(n−1)×0.25\n\n位置 \nQ2=1+(n−1)×0.5\n\n\n位置 \nQ3=1+(n−1)×0.75\n\n\n\n\n```python\n#percentile函数求四分卫数  自动排序\np = np.array([8,7,6,5,4,3,2,1])\n\nprint(np.percentile(p,(25)))\nprint(np.percentile(p,(50)))\nprint(np.percentile(p,(75)))\n```\n\n    2.75\n    4.5\n    6.25\n    \n\n数值型数据：平均数\n\n平均数也称为均值，它是一组数据相加后除以数据总数得到的结果\n\n平均数不适用于分类数据和顺序数据，并且容易受到极大值，极小值影响\n\n\n\n\n```python\n#求平均数\nm = np.array([1,2,3,4])\nnp.mean(m)\n\n#极大值对平均数的影响\nm1 = np.array([1,2,3,4,10])\nnp.mean(m1)\n\n\n```\n\n\n\n\n    4.0\n\n\n\n加权平均数：\n\n一组数据中每个数据具有权重的情况下使用加权平均数计算均值\n\n权重一般计算方法是计算各数值出现的频率\n\naverage 函数计算加权方法 \n\n\n```python\n#average 函数计算加权方法\n#(1*3 + 2*3 + 3*4) / 3+3+4\nm = np.array([1,2,3])\nnp.average(m,weights=[3,3,4])\n```\n\n\n\n\n    2.1\n\n\n\n几何平均数\n\n1.n个变量值乘积的n次方\n\n$$G =\\sqrt[n]{X_1 \\times X_2 \\times \\cdot \\cdot \\cdot \\times X_n } = \\sqrt[n]{\\prod_{i=1}^n X_i}$$\n\n2.几何平均数主要用于计算平均比率，变量值本身是比率的形式，用几何平均法比较合理。\n\n\n\n\n```python\nfrom scipy.stats import gmean\nl = [1.045,1.021,1.255,1.019]\n\ngmean(l)\n\n\n```\n\n\n\n\n    1.0807866848335959\n\n\n","tags":["数据度量"],"categories":["统计"]},{"title":"离散随机变量","url":"/2021/09/22/离散随机变量/","content":"**离散型随机变量及其分布**\n\n随机变量定义：\n\n以抛两枚硬币的例子来说，抛一次实验的样本空间为S={(H,H),(H,T),(T,H),(T,T)},包含四个随机事件。如果我们只关心正面向上事件的次数，而不考虑是哪个硬币正面向上，就是把随机事件用数量表示。\n\n例如，抛两枚硬币的例子，S为样本空间，e为随机事件，令Y表示正面向上的次数，Y就是一个随机变量，它的取值可以是0,1,2次，Y=1时依赖的事件是(H,T)或(T,H)，Y=2时依赖事件{(H,H)},这样就可以把Y的值与事件e相对应。\n\n表达为函数形式Y = Y(e),于是随机变量Y就是定义在样本空间S上的实值单值函数。\n\n考虑随机变量Y=0,1,2时的概率：\n\nP{Y=0} = P{(T,T)} = 1/4\n\nP{Y=1} = P{(H,T),(T,H)} = 2/4 =1/2\n\nP{Y=2} = P{(H,H)} = 1/4\n\nP{Y<=1} = P{(H,T),(T,H),(T,T)} = 3/4\n\n\n\n\n```python\nimport random\n\ndef gen():\n    rand = random.randint(0,1)\n    return rand\n#硬币事件\ndef coin():\n    if gen()==1:\n        return 'h'\n    else:\n        return 't'\n\n \n#计算正反面 \ndef p(c1,c2):\n    \n    s = 4 #样本空间\n    y=[0,1,2] #随机变量\n    if c1 =='t' and c2=='t':\n        return y[0],1/s\n        \n    if (c1 =='h' and c2=='t') or (c1 =='t' and c2=='h'):\n        return y[1],2/s\n        \n    if c1 =='h' and c2=='h':\n        return y[2],1/s\n    \ndef rd():\n    coin1 = coin()\n    coin2 = coin()\n    return p(coin1,coin2)\n    \n\n#抛两个硬币出现0次，1次，2次正面的概率\nfor _ in range(5):\n    res = rd()\n    print(\"随机事件Y={}的概率为 ：{}\".format(res[0],res[1]))\n```\n\n    随机事件Y=2的概率为 ：0.25\n    随机事件Y=1的概率为 ：0.5\n    随机事件Y=1的概率为 ：0.5\n    随机事件Y=1的概率为 ：0.5\n    随机事件Y=1的概率为 ：0.5\n    \n\n**离散型随机变量的期望值和方差**\n\n**随机变量X的期望**：\n离散型随机变量X的一切取值与其对应概率的乘积之和。一般记做E(X)\n\n$$E(X) = x_1p_1+x_2p_2+...x_np_n = \\sum_{i=1}^nx_ip_i$$\n\n期望表示随机变量本身的平均水平或集中程度。\n\n**随机变量X的方差与标准差**：\n方差是随机变量与其数学期望的离差的平均水平，它可以测量随机变量变异程度或离散程度。\n\n方差可以反映随机变量取值的离散程度\n$$D(X) = E \\big[X-E(X)\\big]^2$$\n\n\n\n\n**二项分布**\n\n设试验E只有两种可能结果：成功或失败 ，A与$\\overline{A}$，假设P(A)=p,P($\\overline{A}$) = 1-p,这种只有两种结果的独立重复试验称为伯努利试验\n\n重复是指每次试验p(A)=p不变,独立是指各次试验结果互不影响。\n\n进行n次伯努利试验，每次成功的概率为p,成功k次的概率是多少？这个概率分布就是二项分布\n\n$$p(k) = \\big(_k^n\\big)p^k(1-p)^{n-k}, k = 0,1,2,.....,n$$\n\n由二项式定理\n\n$$(x+y)^n = \\sum_{k=0}^n\\big(_k^n\\big)x^ky^{n-k}$$\n\n得二项分布概率和为\n\n$$\\sum_{k=0}^n\\big(_k^n\\big)p^k(1-p)^{n-k}  = (p+1-p)^n = 1$$\n\n\n\n\n简单的抛硬币游戏\n\n假设抛十次硬币，k值为正面出现的次数 ，随着k值不断增加，观察每个k值对应的概率\n\n可见抛十次硬币，出现5次正面的概率最高，这也符合我们直觉，但是随着期望出现正面的次数越高，反而出现正面的这种概率在下降。\n\n\n```python\nfrom scipy import stats\nimport numpy as np\nfrom  matplotlib import pyplot as plt\nlist = []\nfor i in range(0,11):\n    p = stats.binom.pmf(i,10,0.5)#10次伯努利实验，正面概率为0.5，求i次正面的概率\n    list.append(p)\nprint(list)\n\nx = np.arange(0,11)\nplt.bar(x,height=list)\nplt.xlabel('K')\nplt.ylabel('probability')\nprint(\"二项分布概率和为 ： \",sum(list))\n```\n\n    [0.0009765625, 0.00976562500000001, 0.04394531249999999, 0.11718750000000014, 0.20507812500000022, 0.24609375000000025, 0.20507812500000022, 0.11718750000000014, 0.04394531249999999, 0.00976562500000001, 0.0009765625]\n    二项分布概率和为 ：  1.0000000000000009\n    \n\n\n![png](output_5_2.png)\n\n\n\n","tags":["离散随机变量"],"categories":["概率"]},{"title":"随机事件","url":"/2021/09/22/随机事件/","content":"**随机事件及其概率**\n\n基本概念：\n\n***样本空间**\n\n对于随机试验，其结果不可预测，但是假设所有可能的结果集合是已知的，那么所有可能的结果构成的集合，称为该随机试验的样本空间。一般用大写字母S表示\n\n常见例子：\n\n*抛两枚硬币，考察哪枚硬币正面朝上，样本空间包含下面四种结果：\n\nS = {(H,H),(H,T),(T,H),(T,T)}\n\n(H,H)表示两枚硬币都是正面朝上,(H,T)表示第一枚正面朝上，第二枚反面朝上，其他类推。\n\n*新生婴儿性别，所有可能结果构成样本空间\n\nS = {G,B}\n\nG--女孩，B--男孩\n\n***事件**\n\n样本空间的任一子集E称为事件，事件就是有实验某些可能结果组成的**集合**\n\n例如\n\n1.抛两枚硬币，第一枚硬币正面朝上有两种可能结果(H,H),(H,T).这两个可能的结果构成“第一枚硬币正面朝上”这个事件:\n\n\n\nE = {(H,H),(H,T)}\n\n\n2.新生婴儿是个女孩这个结果构成事件：\n\nE={G}\n\n实验的结果包含在E中，就称为**事件发生。**\n\n***随机事件**\n\n样本空间S的子集E叫做随机事件，简称事件，随机事件可能出现也可能不出现。比如新生婴儿是女孩这个事件就是随机的，硬币正面朝上也是随机的。\n\n***必然事件**\n\n每次试验中一定出现的事件，比如掷一颗骰子，点数大于0，小于7这个事件是必然的。\n\n***不可能事件**\n\n每次试验中不可能出现的事件，比如掷一颗骰子，点数大于6这个事件是不可能发生的。\n\n***基本事件**\n\n样本空间中每个结果称为基本事件，基本事件不能再分解。\n\n\n\n\n\n\n\n\n\n\n**概率**\n\n假设有一样本空间为S 的试验，它在相同条件下可重复进行，对应样本空间中的事件E，记n(E)为n次重复试验中事件E发生的频率（次数），那么该事件发生的概率P(E)定义为：\n\n$$P(E)=\\lim_{n \\rightarrow+\\infty} \\frac{n(E)}{n}$$\n\n事件E的概率P(E)要满足概率的三个公理：\n\n公理1：\n$$0\\leq P(E) \\leq 1$$\n$$**即任何事件E的概率在0到1之间**$$\n\n公理2：\n$$P(S)= 1$$\n$$**样本空间作为必然发生的事件，其概率为1**$$\n\n公理3：\n\n$$**对任意一列互不相容的事件E_1,E_2,...(如果i≠j，则E_iE_j=\\emptyset，两事件不能同时发生),\\\\至少一件事件发生的概率等于各事件发生概率和,有 \\\\P\\left(\\bigcup_{i=1}^\\infty E_i\\right) = \\sum_{i=1}^\\infty P(E_i)**$$\n\n\n\n\n\n\n```python\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom scipy.stats import mode\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nsns.set(style='white',context='notebook',palette='muted')\nimport matplotlib.pyplot as plt\n\ntrain = pd.read_csv('train.csv')\ncopy = train.sample(200)\ncopy\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>618</th>\n      <td>619</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Becker, Miss. Marion Louise</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>230136</td>\n      <td>39.0000</td>\n      <td>F4</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>514</th>\n      <td>515</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Coleff, Mr. Satio</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349209</td>\n      <td>7.4958</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>101</th>\n      <td>102</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Petroff, Mr. Pastcho (\"Pentcho\")</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349215</td>\n      <td>7.8958</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>879</th>\n      <td>880</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)</td>\n      <td>female</td>\n      <td>56.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>11767</td>\n      <td>83.1583</td>\n      <td>C50</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>294</th>\n      <td>295</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Mineff, Mr. Ivan</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349233</td>\n      <td>7.8958</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>573</th>\n      <td>574</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Kelly, Miss. Mary</td>\n      <td>female</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>14312</td>\n      <td>7.7500</td>\n      <td>NaN</td>\n      <td>Q</td>\n    </tr>\n    <tr>\n      <th>414</th>\n      <td>415</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Sundman, Mr. Johan Julian</td>\n      <td>male</td>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O 2. 3101269</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>218</th>\n      <td>219</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Bazzani, Miss. Albina</td>\n      <td>female</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>11813</td>\n      <td>76.2917</td>\n      <td>D15</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>435</th>\n      <td>436</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Carter, Miss. Lucile Polk</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>113760</td>\n      <td>120.0000</td>\n      <td>B96 B98</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>40</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Nicola-Yarred, Miss. Jamila</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2651</td>\n      <td>11.2417</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n  </tbody>\n</table>\n<p>200 rows × 12 columns</p>\n</div>\n\n\n\n\n```python\n#以泰坦尼克数据为例 \n#随机抽取200名乘客数据，计算男女乘客的概率\nmale = (copy.Sex=='male').sum() / len(copy)\nmale\n\n```\n\n\n\n\n    0.59\n\n\n\n\n```python\nfemale = (copy.Sex=='female').sum() / len(copy)\nfemale\n```\n\n\n\n\n    0.41\n\n\n\n\n```python\ncount = copy['Sex'].value_counts()\nplt.bar(count.index,height=count)\n#可见随机抽取的人数中男性比例高于女性\n```\n\n\n\n\n    <BarContainer object of 2 artists>\n\n\n\n\n![png](output_5_1.png)\n\n","tags":["随机事件"],"categories":["概率"]},{"title":"品质数据处理","url":"/2021/09/22/品质数据处理/","content":"\n\n**品质数据（非数值数据）的处理**\n\n品质数据是用文字表示的，主要做分类处理，品质数据又分为分类数据和顺序数据。\n\n分类数据是说明事物类别的一个名称，例如：水果类，蔬菜类，肉类。\n\n顺序数据是说明事物有序类别的一个名称，例如：服务等级分为优，良，中。学历分为大专，本科，研究生。等等\n\n\n\n\n```python\n#以泰坦尼克数据为例\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n#数据在kaggle官网下载，注册一个账号就行\ndata = pd.read_csv('train.csv')\ndf = data.sample(200)\n\ndf\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>50</th>\n      <td>51</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Panula, Master. Juha Niilo</td>\n      <td>male</td>\n      <td>7.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>3101295</td>\n      <td>39.6875</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>272</th>\n      <td>273</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Mellinger, Mrs. (Elizabeth Anne Maidment)</td>\n      <td>female</td>\n      <td>41.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>250644</td>\n      <td>19.5000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>284</th>\n      <td>285</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Smith, Mr. Richard William</td>\n      <td>male</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113056</td>\n      <td>26.0000</td>\n      <td>A19</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>142</th>\n      <td>143</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Hakkarainen, Mrs. Pekka Pietari (Elin Matilda ...</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>STON/O2. 3101279</td>\n      <td>15.8500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>767</th>\n      <td>768</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Mangan, Miss. Mary</td>\n      <td>female</td>\n      <td>30.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>364850</td>\n      <td>7.7500</td>\n      <td>NaN</td>\n      <td>Q</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>282</th>\n      <td>283</td>\n      <td>0</td>\n      <td>3</td>\n      <td>de Pelsmaeker, Mr. Alfons</td>\n      <td>male</td>\n      <td>16.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345778</td>\n      <td>9.5000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>863</th>\n      <td>864</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Sage, Miss. Dorothy Edith \"Dolly\"</td>\n      <td>female</td>\n      <td>NaN</td>\n      <td>8</td>\n      <td>2</td>\n      <td>CA. 2343</td>\n      <td>69.5500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>491</th>\n      <td>492</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Windelov, Mr. Einar</td>\n      <td>male</td>\n      <td>21.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>SOTON/OQ 3101317</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>637</th>\n      <td>638</td>\n      <td>0</td>\n      <td>2</td>\n      <td>Collyer, Mr. Harvey</td>\n      <td>male</td>\n      <td>31.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C.A. 31921</td>\n      <td>26.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>317</th>\n      <td>318</td>\n      <td>0</td>\n      <td>2</td>\n      <td>Moraweck, Dr. Ernest</td>\n      <td>male</td>\n      <td>54.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>29011</td>\n      <td>14.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n<p>200 rows × 12 columns</p>\n</div>\n\n\n\n\n```python\n#查看购买1,2,3类等级票各有多少人\ndf['Pclass'].value_counts()\n```\n\n\n\n\n    3    112\n    2     46\n    1     42\n    Name: Pclass, dtype: int64\n\n\n\n\n```python\n#饼图查看频数\npclass = df['Pclass'].value_counts()\nlabels=['3','2','1']\nfig = plt.figure()\nplt.pie(pclass,labels=labels,autopct='%1.2f%%')\nplt.title(\"Pie Chart\")\n```\n\n\n\n\n    Text(0.5,1,'Pie Chart')\n\n\n\n\n![png](output_3_1.png)\n\n\n\n```python\n#根据登录港口 查看各等级票的人数  按升序排列\ns = df['Pclass'][df['Embarked']=='S'].value_counts().sort_index(ascending = True)#S港口登录的人\nprint(s)\nc = df['Pclass'][df['Embarked']=='C'].value_counts().sort_index(ascending = True)#C港口登录的人\nprint(c)\n#可见C港登录的人中 1类票人最多 也就是这个港口登录的有钱人比较多\n\n```\n\n    1    24\n    2    42\n    3    86\n    Name: Pclass, dtype: int64\n    1    18\n    2     3\n    3    11\n    Name: Pclass, dtype: int64\n    \n\n\n```python\n#条形图展示 各港口的票类型频数\nsns.catplot('Pclass',col='Embarked',kind='count',data=data,height=4)\n```\n\n\n\n\n    <seaborn.axisgrid.FacetGrid at 0x220e3ec8748>\n\n\n\n\n![png](output_5_1.png)\n\n\n\n```python\n #男士，女士生存率 Survived=0代表死亡  Survived=1代表生存\nsns.catplot('Sex',col='Survived',kind='count',data=data,height=4)\n```\n\n\n\n\n    <seaborn.axisgrid.FacetGrid at 0x220e3c7c860>\n\n\n\n\n![png](output_6_1.png)\n\n\n\n```python\n#使用交叉表统计分类频数 margins=True 是添加行列合计功能\n#使用交叉表比单独使用value_counts 表达更清晰\npd.crosstab(df['Pclass'],df['Embarked'],margins=True)\n#pd.crosstab(df['Pclass'],df['Embarked']).applay(lambda row：row/row.sum())\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>Embarked</th>\n      <th>C</th>\n      <th>Q</th>\n      <th>S</th>\n      <th>All</th>\n    </tr>\n    <tr>\n      <th>Pclass</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>18</td>\n      <td>0</td>\n      <td>24</td>\n      <td>42</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>42</td>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>11</td>\n      <td>15</td>\n      <td>86</td>\n      <td>112</td>\n    </tr>\n    <tr>\n      <th>All</th>\n      <td>32</td>\n      <td>16</td>\n      <td>152</td>\n      <td>200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\n#crosstab更高级的用法\n#考试是否及格  Y--及格  N--不及格\np = np.array([\"Y\", \"Y\", \"Y\", \"Y\", \"N\", \"N\",\"N\", \"N\", \"Y\", \"Y\", \"Y\"], dtype=object)\n\n#年级 1年级  2年级\ng = np.array([\"1\", \"1\", \"1\", \"2\", \"1\", \"1\",\"1\", \"2\", \"2\", \"2\", \"1\"], dtype=object)\n\n#考试科目  数学M 语文C\nc = np.array([\"M\", \"M\", \"C\", \"M\", \"M\", \"C\",\"C\", \"M\", \"C\", \"C\", \"C\"],dtype=object)\n\npd.crosstab(p, [g, c], rownames=[u'是否及格'], colnames=[u'年级', u'科目'],margins=True)\n#可见 一年级为例 数学2个及格 ，1个不及格   语文2个及格，2个不及格\n\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th>年级</th>\n      <th colspan=\"2\" halign=\"left\">1</th>\n      <th colspan=\"2\" halign=\"left\">2</th>\n      <th>All</th>\n    </tr>\n    <tr>\n      <th>科目</th>\n      <th>C</th>\n      <th>M</th>\n      <th>C</th>\n      <th>M</th>\n      <th></th>\n    </tr>\n    <tr>\n      <th>是否及格</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>N</th>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>Y</th>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>All</th>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2</td>\n      <td>11</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\n#查看及格人数比例\nproportion = pd.crosstab(p, [g, c], rownames=[u'是否及格'], colnames=[u'年级', u'科目']).apply(lambda row: row/row.sum(),axis=1)\nproportion\n#一年级语文不及格人数占总不及格人数的1/2 数学不及格人数占总不及格人数1/4\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th>年级</th>\n      <th colspan=\"2\" halign=\"left\">1</th>\n      <th colspan=\"2\" halign=\"left\">2</th>\n    </tr>\n    <tr>\n      <th>科目</th>\n      <th>C</th>\n      <th>M</th>\n      <th>C</th>\n      <th>M</th>\n    </tr>\n    <tr>\n      <th>是否及格</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>N</th>\n      <td>0.500000</td>\n      <td>0.250000</td>\n      <td>0.000000</td>\n      <td>0.250000</td>\n    </tr>\n    <tr>\n      <th>Y</th>\n      <td>0.285714</td>\n      <td>0.285714</td>\n      <td>0.285714</td>\n      <td>0.142857</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\n#查看及格人数比率 即百分比 乘以100就行\npercentage = pd.crosstab(p, [g, c], rownames=[u'是否及格'], colnames=[u'年级', u'科目']).apply(lambda row: row/row.sum() *100,axis=1)\npercentage\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th>年级</th>\n      <th colspan=\"2\" halign=\"left\">1</th>\n      <th colspan=\"2\" halign=\"left\">2</th>\n    </tr>\n    <tr>\n      <th>科目</th>\n      <th>C</th>\n      <th>M</th>\n      <th>C</th>\n      <th>M</th>\n    </tr>\n    <tr>\n      <th>是否及格</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>N</th>\n      <td>50.000000</td>\n      <td>25.000000</td>\n      <td>0.000000</td>\n      <td>25.000000</td>\n    </tr>\n    <tr>\n      <th>Y</th>\n      <td>28.571429</td>\n      <td>28.571429</td>\n      <td>28.571429</td>\n      <td>14.285714</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n**顺序数据的整理与图示**\n\n\n\n```python\n#还是以登录港口人数作为统计案例，严格来说登录港口不算是顺序数据。\n#但是这里结合登录人数可以看出它隐含了一些假设，港口登录的人数是有序的\n#查看顺序数据的累积频数\ndesc = data['Embarked'].value_counts()#默认降序排列\n\nprint(desc)\n\nasc = desc.sort_values(ascending=True)\nbase = [100,400,650]\nplt.figure(figsize=(9,3))\nplt.subplot(121)\n#降序排列\nplt.plot(desc,base,c='green')\nplt.subplot(122)\n#升序排列\nplt.plot(asc,base,c='red')\nplt.show()\n```\n\n    S    644\n    C    168\n    Q     77\n    Name: Embarked, dtype: int64\n    \n\n\n![png](output_12_1.png)\n\n\n\n```python\n\n```\n","tags":["数据预处理"],"categories":["统计"]},{"title":"抽样误差","url":"/2021/09/22/sampling/","content":"数据误差：\n\n**1.抽样误差：**\n\n*样本是总体的子集\n\n*在概率抽样中，由抽样随机性引起的样本结果与总体真值之间的误差。\n\n*抽样误差不是针对某个具体样本的检测结果与总体真实结果的差异而言，而是描述所有样本可能的结果与总体真值之间的平均差异。\n\n例如：\n要测一批产品非优质品率，这里一批产品为总体，从中随机抽取产品数量相同的多个样本，\n假设总体真正的非优质品率为30%，而有95%的样本非优品率会落在27.2%--32.8%之间（涉及到中心极限定理）。\n\n30%-2.8%=27.2%，30%+2.8%=32.8%  这个$^+_ -2.8$%的误差就是抽样误差，是由抽样随机性带来的\n\n引起抽样误差原因：\n\n*样本量越大，抽样误差越小，反之样本小，抽样误差大\n\n*总体变异性越大，即每个产品之间差异越大，抽样误差越大，反之各单位产品越相似，抽样误差越小。\n\n<br/>\n\n**2.非抽样误差：**\n\n*非抽样误差是相对抽样误差而言，是指除抽样误差外，由其他原因引起的样本观察结果与总体真值之间的差异。\n\n*非概率抽样也会产生非抽样误差\n\n\n\n\n\n\n\n","tags":["数据误差"],"categories":["统计"]},{"title":"总体均值区间估计","url":"/2021/09/22/总体均值区间估计/","content":"\n总体均值区间估计\n\n有一大批糖果，从中随机抽取16袋，称得质量（单位：g）如下：\n\n506 508 499 503 504 510 497 512\n\n514 505 493 496 506 502 509 496\n\n设袋装糖果质量近似服从正态分布，试求总体均值$\\;\\mu$的置信度为0.95的置信区间。\n\n假设与条件:\n\n1.糖果质量近似服从正态分布。\n\n2.随机取16袋样本，置信度为0.95，构造估计量的样本数小于30，根据经验为小样本,并且总体方差未知。\n\n要用t分布建立总体均值$\\;\\mu$的置信区间\n\n解：总体均值$\\mu$在1-$\\alpha$置信水平下的置信区间为$\\big(\\overline{X} \\pm \\frac{S}{\\sqrt{n}}t_{\\alpha/2}(n-1)\\big) $\n\n$\\overline{X}$--样本均值，S为样本标准差，n为样本容量。\n\n显著水平$\\alpha$=0.05,$\\alpha/2$=0.025,自由度n-1=15，查t分布表得$t_{\\alpha/2}(n-1)$=2.1315\n\n\n\n\n\n\n\n```python\nimport numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nx = [506 ,508 ,499 ,503 ,504 ,510 ,497 \n     ,512 ,514 ,505 ,493 ,496 ,506 ,502 ,509 ,496]\n\n#t分布建立置信区间函数\ndef t_interval(x,conf,df):\n    alpha = 1-conf#\n    n = df-1#自由度\n        \n    std = np.std(x,ddof=1)#标准差\n    mu = np.mean(x)#均值\n    t_score = stats.t.isf(alpha/2,df=n)#t分布临界值\n   \n    low = mu-(std/np.sqrt(df))*t_score\n    upper = mu+(std/np.sqrt(df))*t_score\n    \n    return [low,upper]\n\nt_interval(x,0.95,16)\n\n#有95%的样本糖果均值所构造的置信区间会包括总体糖果的质量均值\n#或者说95%把握认为总体糖果质量均值落在置信区间中\n```\n\n\n\n\n    [500.44510746243924, 507.05489253756076]\n\n\n\n\n```python\n#使用scipy 求置信区间\nsem = stats.sem(x)#样本标准误差\nmu = np.mean(x)#均值\nci = stats.t.interval(alpha=0.95,df=len(x)-1,loc=mu,scale=sem)\nci\n```\n\n\n\n\n    (500.44510746243924, 507.05489253756076)\n\n\n\n\n","tags":["参数估计"],"categories":["统计"]},{"title":"总体均值与方差区间估计","url":"/2021/09/22/总体方差与均值区间估计/","content":"分别使用金球和铂球测定引力常数(单位：10-11m3×kg-1×s-2)．\n\n   (1)用金球测定观测值6.683，6.681，6.676，6.678，6.679,6.672;\n\n   (2)用铂球测定观测值6.661，6.661，6.667，6.667，6.664.设测定值总体为N(u，σ2)，其中u、σ2均未知．试就(1)、(2)两种情况分别求u的置信度为0.9的置信区间，并求σ2的置信度为0.9的置信区间\n\n**1.求u的置信度为0.9的置信区间：**\n\n由于是小样本抽样，并且总体均值与方差未知，使用t分布建立总体均值$\\;\\mu$的置信区间\n\n总体均值$\\mu$在1-$\\alpha$置信水平下的置信区间为$\\big(\\overline{X} \\pm \\frac{S}{\\sqrt{n}}t_{\\alpha/2}(n-1)\\big) $\n\n这里1-$\\alpha$=0.9,$\\alpha$=0.1,$\\alpha/2$=0.05,\n\n金球样本自由度为n1-1=5,铂球样本自由度为n2-1=4\n\n\n\n\n\n\n\n```python\nx1 = [6.683,6.681,6.676,6.678,6.679,6.672]\nx2 = [6.661,6.661,6.667,6.667,6.664]\n#使用之前t_interval函数 建立置信区间\nx1_ci=t_interval(x1,0.9,6)\nx2_ci=t_interval(x2,0.9,5)\nprint('用金球测定时,μ的置信区间是{}'.format(x1_ci))\nprint('用铂球测定时,μ的置信区间是{}'.format(x2_ci))\nprint('###############')\n\n################\n\n#使用scipy库计算#\nx1_sem = stats.sem(x1)\nx2_sem = stats.sem(x2)\n\nx1_df = len(x1)-1\nx2_df=len(x2)-1\n\nx1_mu=np.mean(x1)\nx2_mu=np.mean(x2)\n\nx1_ci=stats.t.interval(alpha=0.9,df=x1_df,loc=x1_mu,scale=x1_sem)\nx2_ci=stats.t.interval(alpha=0.9,df=x2_df,loc=x2_mu,scale=x2_sem)\nprint('用金球测定时,μ的置信区间是{}'.format(x1_ci))\nprint('用铂球测定时,μ的置信区间是{}'.format(x2_ci))\n\n```\n\n    用金球测定时,μ的置信区间是[6.67498413748818, 6.681349195845152]\n    用铂球测定时,μ的置信区间是[6.66113982740759, 6.6668601725924095]\n    ###############\n    用金球测定时,μ的置信区间是(6.67498413748818, 6.681349195845152)\n    用铂球测定时,μ的置信区间是(6.66113982740759, 6.6668601725924095)\n    \n\n**2.求σ2的置信度为0.9的置信区间**\n与第一个问题不同，这是要求方差的置信区间，方差与样本差异有关，而与样本量关系不大。\n\n样本方差服从自由度为n-1的卡方分布（证明要看数理统计教材），所以直接用总体方差的区间估计方法：\n$$\\frac{(n-1)s^2}{\\chi_{\\alpha/2}^2} \\leq \\sigma^2 \\leq \\frac{(n-1)s^2}{\\chi_{1-\\alpha/2}^2} $$\n\n这里$S^2$是样本方差，$\\chi_{\\alpha/2}^2$， $\\chi_{1-\\alpha/2}^2$是卡方分布临界值\n\n\n\n\n\n```python\nx1 = [6.683,6.681,6.676,6.678,6.679,6.672]\nx2 = [6.661,6.661,6.667,6.667,6.664]\ndef chi_interval(x,conf,n):\n    #std = np.std(x1,ddof=1)\n    var  =np.var(x1,ddof=1)#方差\n    alpha = 1-conf\n    df = n-1\n    score_0 = stats.chi2.isf(alpha/2,df)#下界卡方分布临界值\n    score\n```\n\n\n```python\nx1 = [6.683,6.681,6.676,6.678,6.679,6.672]\nx2 = [6.661,6.661,6.667,6.667,6.664]\ndef chi_interval(x,conf,n):\n    #std = np.std(x1,ddof=1)\n    var  =np.var(x,ddof=1)#方差\n    alpha = 1-conf\n    df = n-1\n    score_0 = stats.chi2.isf(alpha/2,df)#下界卡方分布临界值\n    score_1 = stats.chi2.isf(1-alpha/2,df)#上界卡方分布临界值\n    #或者使用stats.chi2.interval(0.9,5)求临界值\n    #score=stats.chi2.interval(conf,df)\n   # print(score)(1.145476226061769, 11.070497693516351)\n    #score_0=score[1]\n    #score_1=score[0]\n    \n    \n\n    low = df*var/score_0\n    upper = df*var/score_1\n    return [low,upper]\n\nx1_ci = chi_interval(x1,0.9,6)\nx2_ci = chi_interval(x2,0.9,5)\nprint('用金球测定时,σ2的置信区间是{}'.format(x1_ci))\nprint('用铂球测定时,σ2的置信区间是{}'.format(x2_ci))\n```\n\n    用金球测定时,σ2的置信区间是[6.759708136442946e-06, 6.532945130656948e-05]\n    用铂球测定时,σ2的置信区间是[3.7943748035426858e-06, 5.065264373908214e-05]\n    \n","tags":["参数估计"],"categories":["统计"]},{"title":"数据透视表","url":"/2021/09/22/数据透视表/","content":"**数据透视表 pivot table**\n\n\n\n\n\n```python\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n\ndata = pd.read_csv('data1.csv')\ndata.pivot_table(df,index=[u'对手'])#以比赛对手为索引查看数据\n\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>3分命中率</th>\n      <th>助攻</th>\n      <th>命中</th>\n      <th>得分</th>\n      <th>投篮命中率</th>\n      <th>投篮数</th>\n      <th>篮板</th>\n    </tr>\n    <tr>\n      <th>对手</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>76人</th>\n      <td>0.33950</td>\n      <td>10.00</td>\n      <td>9.0</td>\n      <td>28.00</td>\n      <td>0.4405</td>\n      <td>20.5</td>\n      <td>3.5</td>\n    </tr>\n    <tr>\n      <th>勇士</th>\n      <td>0.44400</td>\n      <td>11.00</td>\n      <td>10.0</td>\n      <td>27.00</td>\n      <td>0.4350</td>\n      <td>23.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>国王</th>\n      <td>0.28600</td>\n      <td>9.00</td>\n      <td>8.0</td>\n      <td>27.00</td>\n      <td>0.3810</td>\n      <td>21.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>太阳</th>\n      <td>0.54500</td>\n      <td>7.00</td>\n      <td>12.0</td>\n      <td>48.00</td>\n      <td>0.5450</td>\n      <td>22.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>小牛</th>\n      <td>0.46200</td>\n      <td>7.00</td>\n      <td>10.0</td>\n      <td>29.00</td>\n      <td>0.5260</td>\n      <td>19.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>尼克斯</th>\n      <td>0.36900</td>\n      <td>9.50</td>\n      <td>10.5</td>\n      <td>34.00</td>\n      <td>0.4175</td>\n      <td>25.0</td>\n      <td>3.5</td>\n    </tr>\n    <tr>\n      <th>开拓者</th>\n      <td>0.57100</td>\n      <td>3.00</td>\n      <td>16.0</td>\n      <td>48.00</td>\n      <td>0.5520</td>\n      <td>29.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>掘金</th>\n      <td>0.14300</td>\n      <td>9.00</td>\n      <td>6.0</td>\n      <td>21.00</td>\n      <td>0.3750</td>\n      <td>16.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>步行者</th>\n      <td>0.29150</td>\n      <td>12.50</td>\n      <td>8.5</td>\n      <td>27.50</td>\n      <td>0.3965</td>\n      <td>21.5</td>\n      <td>6.5</td>\n    </tr>\n    <tr>\n      <th>湖人</th>\n      <td>0.44400</td>\n      <td>9.00</td>\n      <td>13.0</td>\n      <td>36.00</td>\n      <td>0.5910</td>\n      <td>22.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>灰熊</th>\n      <td>0.35025</td>\n      <td>7.75</td>\n      <td>8.5</td>\n      <td>27.25</td>\n      <td>0.4015</td>\n      <td>21.0</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>爵士</th>\n      <td>0.60400</td>\n      <td>8.00</td>\n      <td>13.5</td>\n      <td>42.50</td>\n      <td>0.5905</td>\n      <td>22.0</td>\n      <td>3.5</td>\n    </tr>\n    <tr>\n      <th>猛龙</th>\n      <td>0.27300</td>\n      <td>11.00</td>\n      <td>8.0</td>\n      <td>38.00</td>\n      <td>0.3200</td>\n      <td>25.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>篮网</th>\n      <td>0.61500</td>\n      <td>8.00</td>\n      <td>13.0</td>\n      <td>37.00</td>\n      <td>0.6500</td>\n      <td>20.0</td>\n      <td>10.0</td>\n    </tr>\n    <tr>\n      <th>老鹰</th>\n      <td>0.54500</td>\n      <td>11.00</td>\n      <td>8.0</td>\n      <td>29.00</td>\n      <td>0.5330</td>\n      <td>15.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>骑士</th>\n      <td>0.42900</td>\n      <td>13.00</td>\n      <td>8.0</td>\n      <td>35.00</td>\n      <td>0.3810</td>\n      <td>21.0</td>\n      <td>11.0</td>\n    </tr>\n    <tr>\n      <th>鹈鹕</th>\n      <td>0.40000</td>\n      <td>17.00</td>\n      <td>8.0</td>\n      <td>26.00</td>\n      <td>0.5000</td>\n      <td>16.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>黄蜂</th>\n      <td>0.40000</td>\n      <td>11.00</td>\n      <td>8.0</td>\n      <td>27.00</td>\n      <td>0.4440</td>\n      <td>18.0</td>\n      <td>10.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndata.pivot_table(df,index=[u'主客场',u'对手'])#两个索引\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>3分命中率</th>\n      <th>助攻</th>\n      <th>命中</th>\n      <th>得分</th>\n      <th>投篮命中率</th>\n      <th>投篮数</th>\n      <th>篮板</th>\n    </tr>\n    <tr>\n      <th>主客场</th>\n      <th>对手</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"7\" valign=\"top\">主</th>\n      <th>76人</th>\n      <td>0.4290</td>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>29.0</td>\n      <td>0.381</td>\n      <td>21.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>小牛</th>\n      <td>0.4620</td>\n      <td>7.0</td>\n      <td>10.0</td>\n      <td>29.0</td>\n      <td>0.526</td>\n      <td>19.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>尼克斯</th>\n      <td>0.3850</td>\n      <td>10.0</td>\n      <td>12.0</td>\n      <td>37.0</td>\n      <td>0.444</td>\n      <td>27.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>灰熊</th>\n      <td>0.3395</td>\n      <td>8.0</td>\n      <td>9.5</td>\n      <td>30.0</td>\n      <td>0.420</td>\n      <td>22.5</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>爵士</th>\n      <td>0.8750</td>\n      <td>13.0</td>\n      <td>19.0</td>\n      <td>56.0</td>\n      <td>0.760</td>\n      <td>25.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>猛龙</th>\n      <td>0.2730</td>\n      <td>11.0</td>\n      <td>8.0</td>\n      <td>38.0</td>\n      <td>0.320</td>\n      <td>25.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>鹈鹕</th>\n      <td>0.4000</td>\n      <td>17.0</td>\n      <td>8.0</td>\n      <td>26.0</td>\n      <td>0.500</td>\n      <td>16.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"11\" valign=\"top\">客</th>\n      <th>76人</th>\n      <td>0.2500</td>\n      <td>13.0</td>\n      <td>10.0</td>\n      <td>27.0</td>\n      <td>0.500</td>\n      <td>20.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>勇士</th>\n      <td>0.4440</td>\n      <td>11.0</td>\n      <td>10.0</td>\n      <td>27.0</td>\n      <td>0.435</td>\n      <td>23.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>国王</th>\n      <td>0.2860</td>\n      <td>9.0</td>\n      <td>8.0</td>\n      <td>27.0</td>\n      <td>0.381</td>\n      <td>21.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>太阳</th>\n      <td>0.5450</td>\n      <td>7.0</td>\n      <td>12.0</td>\n      <td>48.0</td>\n      <td>0.545</td>\n      <td>22.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>尼克斯</th>\n      <td>0.3530</td>\n      <td>9.0</td>\n      <td>9.0</td>\n      <td>31.0</td>\n      <td>0.391</td>\n      <td>23.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>开拓者</th>\n      <td>0.5710</td>\n      <td>3.0</td>\n      <td>16.0</td>\n      <td>48.0</td>\n      <td>0.552</td>\n      <td>29.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>步行者</th>\n      <td>0.2500</td>\n      <td>15.0</td>\n      <td>9.0</td>\n      <td>26.0</td>\n      <td>0.429</td>\n      <td>21.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>灰熊</th>\n      <td>0.3610</td>\n      <td>7.5</td>\n      <td>7.5</td>\n      <td>24.5</td>\n      <td>0.383</td>\n      <td>19.5</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>爵士</th>\n      <td>0.3330</td>\n      <td>3.0</td>\n      <td>8.0</td>\n      <td>29.0</td>\n      <td>0.421</td>\n      <td>19.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>老鹰</th>\n      <td>0.5450</td>\n      <td>11.0</td>\n      <td>8.0</td>\n      <td>29.0</td>\n      <td>0.533</td>\n      <td>15.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>黄蜂</th>\n      <td>0.4000</td>\n      <td>11.0</td>\n      <td>8.0</td>\n      <td>27.0</td>\n      <td>0.444</td>\n      <td>18.0</td>\n      <td>10.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\n# 设置values的值 筛选所需的列数据 \npd.pivot_table(df,index=[u'主客场',u'胜负'],values=[u'得分',u'助攻',u'篮板',u'投篮数'])\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>助攻</th>\n      <th>得分</th>\n      <th>投篮数</th>\n      <th>篮板</th>\n    </tr>\n    <tr>\n      <th>主客场</th>\n      <th>胜负</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">主</th>\n      <th>胜</th>\n      <td>10.555556</td>\n      <td>34.222222</td>\n      <td>21.222222</td>\n      <td>5.444444</td>\n    </tr>\n    <tr>\n      <th>负</th>\n      <td>8.666667</td>\n      <td>29.666667</td>\n      <td>22.000000</td>\n      <td>5.000000</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">客</th>\n      <th>胜</th>\n      <td>9.000000</td>\n      <td>32.000000</td>\n      <td>21.083333</td>\n      <td>4.916667</td>\n    </tr>\n    <tr>\n      <th>负</th>\n      <td>8.000000</td>\n      <td>20.000000</td>\n      <td>19.000000</td>\n      <td>4.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\n#使用aggfunc 函数计算数据均值\npd.pivot_table(df,index=[u'对手',u'胜负'],values=[u'得分',u'助攻',u'篮板'],aggfunc=[np.mean],fill_value=0)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th></th>\n      <th colspan=\"3\" halign=\"left\">mean</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th></th>\n      <th>助攻</th>\n      <th>得分</th>\n      <th>篮板</th>\n    </tr>\n    <tr>\n      <th>对手</th>\n      <th>胜负</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">76人</th>\n      <th>胜</th>\n      <td>13.0</td>\n      <td>27.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>负</th>\n      <td>7.0</td>\n      <td>29.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>勇士</th>\n      <th>胜</th>\n      <td>11.0</td>\n      <td>27.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>国王</th>\n      <th>胜</th>\n      <td>9.0</td>\n      <td>27.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>太阳</th>\n      <th>胜</th>\n      <td>7.0</td>\n      <td>48.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>小牛</th>\n      <th>胜</th>\n      <td>7.0</td>\n      <td>29.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>尼克斯</th>\n      <th>胜</th>\n      <td>9.5</td>\n      <td>34.0</td>\n      <td>3.5</td>\n    </tr>\n    <tr>\n      <th>开拓者</th>\n      <th>胜</th>\n      <td>3.0</td>\n      <td>48.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>掘金</th>\n      <th>胜</th>\n      <td>9.0</td>\n      <td>21.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>步行者</th>\n      <th>胜</th>\n      <td>12.5</td>\n      <td>27.5</td>\n      <td>6.5</td>\n    </tr>\n    <tr>\n      <th>湖人</th>\n      <th>胜</th>\n      <td>9.0</td>\n      <td>36.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">灰熊</th>\n      <th>胜</th>\n      <td>7.5</td>\n      <td>33.5</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>负</th>\n      <td>8.0</td>\n      <td>21.0</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>爵士</th>\n      <th>胜</th>\n      <td>8.0</td>\n      <td>42.5</td>\n      <td>3.5</td>\n    </tr>\n    <tr>\n      <th>猛龙</th>\n      <th>负</th>\n      <td>11.0</td>\n      <td>38.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>篮网</th>\n      <th>胜</th>\n      <td>8.0</td>\n      <td>37.0</td>\n      <td>10.0</td>\n    </tr>\n    <tr>\n      <th>老鹰</th>\n      <th>胜</th>\n      <td>11.0</td>\n      <td>29.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>骑士</th>\n      <th>胜</th>\n      <td>13.0</td>\n      <td>35.0</td>\n      <td>11.0</td>\n    </tr>\n    <tr>\n      <th>鹈鹕</th>\n      <th>胜</th>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>黄蜂</th>\n      <th>胜</th>\n      <td>11.0</td>\n      <td>27.0</td>\n      <td>10.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n","tags":["python数据透视表"],"categories":["统计"]}]